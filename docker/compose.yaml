services:
  db:
    image: mysql:8.0.33
    container_name: db
    restart: always
    env_file:
      - .env
    ports:
      - "6033:3306"
    volumes:
      - ./mysql/01-init.sql:/docker-entrypoint-initdb.d/01-init.sql
      - ./mysql/02-data.sql:/docker-entrypoint-initdb.d/02-data.sql

#  zookeeper:
#    container_name: zookeeper
#    image: bitnami/zookeeper:3.9.3
#    restart: always
#    environment:
#      ALLOW_ANONYMOUS_LOGIN: "yes"
#    ports:
#      - "2181:2181"
#
#  kafka:
#    container_name: kafka
#    image: bitnami/kafka:3.7.1
#    restart: always
#    ports:
#      - "9092:9092"
#    environment:
#      KAFKA_LISTENERS: "INTERNAL://:29092,EXTERNAL://:9092"
#      KAFKA_ADVERTISED_LISTENERS: "INTERNAL://kafka:29092,EXTERNAL://localhost:9092"
#      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT"
#      KAFKA_INTER_BROKER_LISTENER_NAME: "INTERNAL"
#      KAFKA_ZOOKEEPER_SESSION_TIMEOUT: "6000"
#      KAFKA_RESTART_ATTEMPTS: "10"
#      KAFKA_RESTART_DELAY: "5"
#      ZOOKEEPER_AUTOPURGE_PURGE_INTERVAL: "0"
#      KAFKA_CFG_ZOOKEEPER_CONNECT: "zookeeper:2181"
#      ALLOW_PLAINTEXT_LISTENER: "yes"
#    depends_on:
#      - zookeeper
#
#  kafdrop:
#    image: obsidiandynamics/kafdrop:4.0.2
#    container_name: kafdrop
#    restart: "no"
#    ports:
#      - "9000:9000"
#    environment:
#      KAFKA_BROKERCONNECT: "kafka:29092"
#    depends_on:
#      - kafka

#  app:
#    image: demo
#    container_name: app
#    environment:
#      - SPRING_DATASOURCE_URL=jdbc:mysql://db:3306/demo?allowPublicKeyRetrieval=true
#      - SPRING_DATASOURCE_USERNAME=user
#      - SPRING_DATASOURCE_PASSWORD=password
#    ports:
#      - "8080:8080"
#    depends_on:
#      - db